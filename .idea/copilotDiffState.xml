<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/bureaucratic-system/src/main/java/org/example/config/ConfigLoader.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/bureaucratic-system/src/main/java/org/example/config/ConfigLoader.java" />
              <option name="originalContent" value="package org.example.config;&#10;&#10;import org.example.model.Config;&#10;import org.yaml.snakeyaml.Yaml;&#10;import org.yaml.snakeyaml.constructor.Constructor;&#10;&#10;import java.io.InputStream;&#10;&#10;public class ConfigLoader {&#10;&#10;    public static Config loadConfig(String resourcePath) {&#10;        Yaml yaml = new Yaml(new Constructor(Config.class));&#10;        InputStream inputStream = ConfigLoader.class.getClassLoader().getResourceAsStream(resourcePath);&#10;&#10;        if (inputStream == null) {&#10;            throw new RuntimeException(&quot;Configuration file not found: &quot; + resourcePath);&#10;        }&#10;&#10;        return yaml.load(inputStream);&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package org.example.config;&#10;&#10;import org.example.model.Config;&#10;import org.yaml.snakeyaml.Yaml;&#10;import org.yaml.snakeyaml.constructor.Constructor;&#10;import org.yaml.snakeyaml.LoaderOptions;&#10;&#10;import java.io.InputStream;&#10;&#10;public class ConfigLoader {&#10;    &#10;    public static Config loadConfig(String resourcePath) {&#10;        LoaderOptions loaderOptions = new LoaderOptions();&#10;        Yaml yaml = new Yaml(new Constructor(Config.class, loaderOptions));&#10;        InputStream inputStream = ConfigLoader.class.getClassLoader().getResourceAsStream(resourcePath);&#10;        &#10;        if (inputStream == null) {&#10;            throw new RuntimeException(&quot;Configuration file not found: &quot; + resourcePath);&#10;        }&#10;        &#10;        return yaml.load(inputStream);&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>